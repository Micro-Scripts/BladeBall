--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v90=v2(v0(v30,16));if v19 then local v111=0;local v112;while true do if (v111==1) then return v112;end if (v111==0) then v112=v5(v90,v19);v19=nil;v111=1;end end else return v90;end end end);local function v20(v31,v32,v33) if v33 then local v91=(v31/((1067 -(68 + 997))^(v32-(2 -1))))%((5 -3)^(((v33-(1 + 0)) -(v32-((1271 -(226 + 1044)) -0))) + ((8 -6) -1))) ;return v91-(v91%(620 -(555 + 64))) ;else local v92=(1639 -(1523 + (162 -48)))^(v32-1) ;return (((v31%(v92 + v92))>=v92) and 1) or (931 -(857 + 74)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (119 -(32 + 85)) ;return (v36 * (251 + 5)) + v35 ;end local function v23() local v37=0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==0) then v38,v39,v40,v41=v1(v16,v18,v18 + ((704 + 256) -(892 + 65)) );v18=v18 + (9 -5) ;v37=1 -0 ;end if (v37==1) then return (v41 * (30800116 -14022900)) + (v40 * (65886 -(87 + 263))) + (v39 * (436 -((164 -97) + 113))) + v38 ;end end end local function v24() local v42=(772 -(201 + 571)) + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(7 -5)) then v47=v20(v44,973 -(802 + 150) ,83 -52 );v48=((v20(v44,57 -25 )==(1 + 0)) and  -(998 -(915 + 82))) or (2 -1) ;v42=2 + 1 ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=1188 -((2207 -(116 + 1022)) + 118) ;end if (v42==(6 -3)) then if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * 0 ;else v47=1 -0 ;v45=0;end elseif (v47==(2031 + (66 -50))) then return ((v46==(791 -(217 + 151 + 423))) and (v48 * ((3 -2)/(18 -(10 + 8))))) or (v48 * NaN) ;end return v8(v48,v47-(3934 -2911) ) * (v45 + (v46/(((1620 -1176) -(416 + 26))^(165 -113)))) ;end if ((1 + (0 -0))==v42) then v45=1 -0 ;v46=(v20(v44,439 -((1004 -(814 + 45)) + 293) ,450 -(44 + (950 -564)) ) * ((1488 -(998 + 488))^(11 + 2 + 19))) + v43 ;v42=2 + 0 ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v67=886 -(261 + 624) , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100,v101) local v102=(function() return 0 -0 ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do local v110=(function() return 0;end)();while true do if (v110~=(0 + 0)) then else if ((2 -1)==v102) then local v121=(function() return 0;end)();while true do if (v121~=0) then else while true do if (v93==0) then v94=(function() return v95();end)();if (v96(v94, #"}", #"~")==0) then local v233=(function() return 0 -0 ;end)();local v234=(function() return;end)();local v235=(function() return;end)();local v236=(function() return;end)();local v237=(function() return;end)();while true do if (v233==(1 -0)) then v236=(function() return nil;end)();v237=(function() return nil;end)();v233=(function() return 5 -3 ;end)();end if (v233==2) then while true do if (2~=v234) then else local v318=(function() return 0;end)();while true do if (v318~=(285 -(134 + 151))) then else if (v96(v236, #".", #"~")== #"!") then v237[2]=(function() return v97[v237[2]];end)();end if (v96(v236,2,1667 -(970 + 695) )~= #">") then else v237[ #"-19"]=(function() return v97[v237[ #"asd"]];end)();end v318=(function() return 1 -0 ;end)();end if (v318==(1991 -(582 + 1408))) then v234=(function() return  #"91(";end)();break;end end end if ( #"xxx"~=v234) then else if (v96(v236, #"91(", #"19(")== #"<") then v237[ #"xnxx"]=(function() return v97[v237[ #"0313"]];end)();end v98[v99]=(function() return v237;end)();break;end if (v234~= #"}") then else local v320=(function() return 0 -0 ;end)();local v321=(function() return;end)();while true do if ((0 -0)==v320) then v321=(function() return 0 -0 ;end)();while true do if (v321==(1825 -(1195 + 629))) then v234=(function() return 2;end)();break;end if (v321==(0 -0)) then v237=(function() return {v100(),v100(),nil,nil};end)();if (v235==(241 -(187 + 54))) then local v340=(function() return 780 -(162 + 618) ;end)();local v341=(function() return;end)();while true do if (v340==0) then v341=(function() return 0;end)();while true do if (v341~=0) then else v237[ #"xnx"]=(function() return v100();end)();v237[ #"0836"]=(function() return v100();end)();break;end end break;end end elseif (v235== #"]") then v237[ #"xxx"]=(function() return v101();end)();elseif (v235==2) then v237[ #"xnx"]=(function() return v101() -((2 + 0)^(11 + 5)) ;end)();elseif (v235== #"nil") then local v346=(function() return 0;end)();local v347=(function() return;end)();while true do if (v346==0) then v347=(function() return 0;end)();while true do if (v347==0) then v237[ #"19("]=(function() return v101() -(2^16) ;end)();v237[ #"?id="]=(function() return v100();end)();break;end end break;end end end v321=(function() return 1 -0 ;end)();end end break;end end end if (v234==0) then local v322=(function() return 0 -0 ;end)();local v323=(function() return;end)();while true do if (v322==0) then v323=(function() return 0 + 0 ;end)();while true do if (v323~=0) then else v235=(function() return v96(v94,2, #"gha");end)();v236=(function() return v96(v94, #"0313",1642 -(1373 + 263) );end)();v323=(function() return 1001 -(451 + 549) ;end)();end if (v323==(1 + 0)) then v234=(function() return  #"|";end)();break;end end break;end end end end break;end if (v233~=(0 -0)) then else local v297=(function() return 0 -0 ;end)();local v298=(function() return;end)();while true do if (v297==(1384 -(746 + 638))) then v298=(function() return 0 + 0 ;end)();while true do if ((0 -0)==v298) then v234=(function() return 0;end)();v235=(function() return nil;end)();v298=(function() return 1;end)();end if (1==v298) then v233=(function() return 1;end)();break;end end break;end end end end end break;end end return v93,v94,v95,v96,v97,v98,v99,v100,v101;end end end if (v102~=0) then else local v122=(function() return 341 -(218 + 123) ;end)();while true do if ((1582 -(1535 + 46))==v122) then v102=(function() return 1 + 0 ;end)();break;end if (0~=v122) then else v93=(function() return 0;end)();v94=(function() return nil;end)();v122=(function() return 1;end)();end end end break;end end end end;end)();local v53=(function() return function(v103,v104,v105) local v106=(function() return 0;end)();while true do if (v106==0) then local v117=(function() return 0;end)();local v118=(function() return;end)();while true do if (v117~=0) then else v118=(function() return 0;end)();while true do if (v118==0) then v103[v104-#":" ]=(function() return v105();end)();return v103,v104,v105;end end break;end end end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"\\",v58 do local v70=(function() return 560 -(306 + 254) ;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70==(1 + 0)) then v73=(function() return nil;end)();while true do if (v71==1) then if (v72== #"|") then v73=(function() return v21()~=(0 -0) ;end)();elseif (v72==(1469 -(899 + 568))) then v73=(function() return v24();end)();elseif (v72== #"91(") then v73=(function() return v25();end)();end v59[v69]=(function() return v73;end)();break;end if (v71==(0 + 0)) then local v120=(function() return 0 -0 ;end)();while true do if (v120==(604 -(268 + 335))) then v71=(function() return 1;end)();break;end if ((290 -(60 + 230))==v120) then v72=(function() return v21();end)();v73=(function() return nil;end)();v120=(function() return 573 -(426 + 146) ;end)();end end end end break;end if ((0 + 0)==v70) then v71=(function() return 0;end)();v72=(function() return nil;end)();v70=(function() return 1;end)();end end end v57[ #"xnx"]=(function() return v21();end)();for v74= #" ",v23() do FlatIdent_31A5A,Descriptor,v21,v20,v59,v54,v74,v22,v23=(function() return v52(FlatIdent_31A5A,Descriptor,v21,v20,v59,v54,v74,v22,v23);end)();end for v75= #"]",v23() do v55,v75,v28=(function() return v53(v55,v75,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1457 -(282 + 1174) ];local v65=v61[813 -(569 + 242) ];local v66=v61[8 -5 ];return function(...) local v76=v64;local v77=v65;local v78=v66;local v79=v27;local v80=1 + 0 + 0 + 0 ;local v81= -(1025 -(706 + 318));local v82={};local v83={...};local v84=v12("#",...) -(1272 -(945 + 326)) ;local v85={};local v86={};for v107=0 -0 ,v84 do if (v107>=v78) then v82[v107-v78 ]=v83[v107 + 1 + 0 ];else v86[v107]=v83[v107 + (701 -(271 + 429)) ];end end local v87=(v84-v78) + 1 + 0 ;local v88;local v89;while true do v88=v76[v80];v89=v88[1];if ((v89<=(1536 -(1408 + (317 -225)))) or (2570>=4524)) then if (v89<=(1103 -(239 + 222 + 625))) then if ((1460<=3598) and (v89<=(1296 -(993 + 295)))) then if ((v89<=(1 + 2)) or (4116<1192)) then if (v89<=(1172 -(418 + 753))) then if (v89==(0 + (470 -(381 + 89)))) then v86[v88[1 + 1 ]]=v88[3];else v86[v88[1 + 1 ]][v88[1 + 2 ]]=v88[533 -(406 + 123) ];end elseif (v89>(1771 -(1749 + 18 + 2))) then v86[v88[1 + 1 ]]={};else local v129=v88[1324 -(1249 + 73) ];v86[v129]=v86[v129](v13(v86,v129 + 1 + 0 ,v88[1148 -(466 + 679) ]));end elseif (v89<=(11 -(5 + 1))) then if ((v89==(11 -(11 -4))) or (4316<=2146)) then v86[v88[1902 -(106 + 1794) ]][v88[1 + (1158 -(1074 + 82)) ]]=v88[2 + 2 ];else local v133=v88[8 -5 ];local v134=v86[v133];for v200=v133 + ((3 -1) -1) ,v88[118 -(4 + 110) ] do v134=v134   .. v86[v200] ;end v86[v88[586 -(57 + 527) ]]=v134;end elseif ((v89<=6) or (3377<=903)) then if ((3976>=439) and (v86[v88[2]]<=v88[(3215 -(214 + 1570)) -(41 + 1386) ])) then v80=v80 + ((1559 -(990 + 465)) -(17 + 86)) ;else v80=v88[3 + 0 ];end elseif ((v89>(14 -7)) or (3546<=2809)) then v86[v88[5 -3 ]]=v63[v88[3]];else v86[v88[2]]=v88[169 -(122 + 44) ]~=0 ;end elseif (v89<=12) then if (v89<=(17 -7)) then if ((3752==3752) and (v89>9)) then if v86[v88[6 -4 ]] then v80=v80 + 1 + 0 ;else v80=v88[3];end else local v136=v88[1 + 1 + 0 ];local v137,v138=v79(v86[v136](v13(v86,v136 + 1 ,v88[3])));v81=(v138 + v136) -(1 -0) ;local v139=0;for v201=v136,v81 do v139=v139 + 1 ;v86[v201]=v137[v139];end end elseif ((4046>2695) and (v89>(76 -(30 + 35)))) then local v140=v88[2 + 0 ];v86[v140]=v86[v140](v13(v86,v140 + (1258 -(1043 + 214)) ,v88[(5 + 6) -8 ]));elseif (v86[v88[1214 -(323 + 889) ]]==v88[10 -6 ]) then v80=v80 + ((565 + 16) -(361 + 219)) ;else v80=v88[3];end elseif ((4904>2166) and (v89<=(55 -41))) then if (v89>(333 -(53 + 267))) then local v142=v77[v88[1729 -(1668 + 58) ]];local v143;local v144={};v143=v10({},{__index=function(v204,v205) local v206=v144[v205];return v206[1 + 0 ][v206[415 -(15 + 398) ]];end,__newindex=function(v207,v208,v209) local v210=v144[v208];v210[983 -(18 + 964) ][v210[7 -5 ]]=v209;end});for v212=1 + 0 ,v88[3 + 1 ] do local v213=850 -(20 + 830) ;local v214;while true do if (v213==0) then v80=v80 + 1 + (0 -0) ;v214=v76[v80];v213=127 -(116 + 10) ;end if (v213==(1 + 0)) then if ((v214[739 -(542 + (404 -208)) ]==(158 -84)) or (3545==3197)) then v144[v212-1 ]={v86,v214[2 + 1 ]};else v144[v212-(2 -1) ]={v62,v214[1554 -(1126 + 425) ]};end v85[ #v85 + 1 + 0 ]=v144;break;end end end v86[v88[407 -(118 + 54 + 233) ]]=v29(v142,v143,v63);else local v146=v88[2];v86[v146](v13(v86,v146 + ((3 + 0) -2) ,v88[1124 -((397 -279) + (2997 -(109 + 1885))) ]));end elseif (v89<=(43 -28)) then if ((109>=90) and (v88[379 -(142 + 235) ]==v86[v88[4]])) then v80=v80 + (4 -3) ;else v80=v88[1 + 2 ];end elseif ((2394>373) and (v89>(993 -(553 + 424)))) then v86[v88[3 -1 ]]=v29(v77[v88[3 + 0 ]],nil,v63);else v86[v88[2 + 0 ]]=v62[v88[2 + 1 ]];end elseif ((4155<=4232) and (v89<=(12 + 14))) then if ((4978>2905) and (v89<=(12 + 9))) then if ((v89<=(40 -21)) or (3026<=2280)) then if ((v89==(49 -31)) or (1653<=1108)) then v86[v88[4 -2 ]][v88[3]]=v86[v88[2 + 2 ]];else v80=v88[3];end elseif (v89==(96 -76)) then v86[v88[2]]=v88[756 -(239 + 514) ];else do return v86[v88[1 + 1 ]];end end elseif ((v89<=(1352 -(797 + 532))) or (3581==3473)) then if (v89==22) then local v152=v88[(1471 -(1269 + 200)) + 0 ];local v153=v86[v88[3]];v86[v152 + (1 -0) + 0 ]=v153;v86[v152]=v153[v88[4]];else local v157=v88[4 -2 ];do return v13(v86,v157,v157 + v88[(2020 -(98 + 717)) -(373 + 829) ] );end end elseif (v89<=(755 -((1302 -(802 + 24)) + 255))) then for v215=v88[1132 -(369 + 761) ],v88[2 + 1 ] do v86[v215]=nil;end elseif ((2909>2609) and (4995>3348) and (v89>25)) then v86[v88[2]][v88[3]]=v86[v88[6 -2 ]];elseif v86[v88[2]] then v80=v80 + 1 ;else v80=v88[5 -2 ];end elseif ((v89<=(269 -((109 -45) + 174))) or (754>3724)) then if ((217>=57) and (v89<=28)) then if ((757>194) and ((v89>(4 + 23)) or (2070>=4037))) then local v158=0 -0 ;local v159;while true do if ((v158==(336 -(144 + 192))) or (31>=1398)) then v159=v88[2];v86[v159](v86[v159 + (217 -(42 + (218 -44))) ]);break;end end else v86[v88[2 + 0 ]]={};end elseif ((3196<=4872) and (2705==2705) and (v89<=(25 + 4))) then if (v86[v88[1 + 1 ]]~=v88[4]) then v80=v80 + (1505 -(363 + 1141)) ;else v80=v88[1583 -(1183 + 397) ];end elseif (v89==(91 -61)) then local v251=v88[2 + 0 ];local v252=v86[v88[3]];v86[v251 + 1 + 0 + 0 ]=v252;v86[v251]=v252[v88[1979 -(1913 + 62) ]];else v86[v88[2]]=v86[v88[2 + 1 + 0 ]] -v86[v88[10 -6 ]] ;end elseif (v89<=(1966 -(93 + 472 + 1368))) then if (v89==(120 -88)) then if  not v86[v88[1663 -(1477 + 184) ]] then v80=v80 + (1 -0) ;else v80=v88[3 + 0 ];end elseif ((61==61) and (v88[(186 + 672) -(564 + 292) ]<=v86[v88[6 -2 ]])) then v80=v80 + 1 ;else v80=v88[(22 -14) -5 ];end elseif (v89<=(338 -(244 + 60))) then local v161=v88[2 + 0 ];v86[v161]=v86[v161](v86[v161 + 1 ]);elseif (v89==(511 -((136 -95) + 156 + 279))) then v86[v88[1003 -(938 + 63) ]]=v88[3 + 0 ]~=(1125 -(936 + 77 + 112)) ;v80=v80 + 1 + 0 ;else v62[v88[3]]=v86[v88[2]];end elseif (v89<=(1668 -(1565 + 48))) then if ((3326==3326) and (v89<=(28 + 17))) then if ((1433<=3878) and ((v89<=40) or (699>=1296))) then if ((v89<=38) or (1583==1735)) then if ((v89==((970 + 205) -(782 + 356))) or (2981==2350)) then v86[v88[269 -(176 + 91) ]]();else do return v86[v88[4 -2 ]];end end elseif (v89==39) then v80=v88[4 -1 ];else v86[v88[2]]=v86[v88[1095 -(709 + 266 + 117) ]] -v86[v88[1879 -(157 + 1718) ]] ;end elseif (v89<=(35 + 7)) then if ((v89==(145 -104)) or (4466<=493)) then v86[v88[(3 + 3) -4 ]]=v86[v88[1021 -(697 + 321) ]]/v86[v88[10 -6 ]] ;else local v166=v88[3 -1 ];local v167={};for v217=2 -1 , #v85 do local v218=0 + 0 ;local v219;while true do if ((v218==(0 -0)) or (2547<=1987)) then v219=v85[v217];for v299=0 -0 , #v219 do local v300=(2660 -(797 + 636)) -(322 + 905) ;local v301;local v302;local v303;while true do if (v300==1) then v303=v301[613 -(602 + 9) ];if ((v302==v86) and (v303>=v166)) then local v328=1189 -(449 + 740) ;while true do if ((v328==0) or (1783>=3616)) then v167[v303]=v302[v303];v301[873 -(826 + 46) ]=v167;break;end end end break;end if ((v300==(0 -0)) or (3913>4527)) then v301=v219[v299];v302=v301[1620 -(1427 + 192) ];v300=948 -(245 + 702) ;end end end break;end end end end elseif (v89<=((47 + 88) -(213 -121))) then v86[v88[1 + 1 ]]=v63[v88[1901 -(260 + 1638) ]];elseif (v89>(484 -(382 + 58))) then v86[v88[6 -4 ]]=v88[3]~=0 ;elseif ((2961>2740) and (v86[v88[2 + 0 ]]~=v88[4])) then v80=v80 + (1 -0) ;else v80=v88[8 -5 ];end elseif ((4376>817) and (v89<=(1255 -(902 + 273 + 30)))) then if ((3696>=3612) and (v89<=(103 -56))) then if (((4861>824) and (v89>(110 -64))) or (2970==1878)) then v62[v88[1 + 1 + 1 ]]=v86[v88[1692 -(1121 + (895 -(192 + 134))) ]];else local v172=v77[v88[217 -(22 + 192) ]];local v173;local v174={};v173=v10({},{__index=function(v220,v221) local v222=v174[v221];return v222[684 -(483 + 200) ][v222[1465 -(1404 + 59) ]];end,__newindex=function(v223,v224,v225) local v226=v174[v224];v226[2 -1 ][v226[2 -0 ]]=v225;end});for v228=766 -(468 + 297) ,v88[566 -(334 + 228) ] do local v229=0 -0 ;local v230;while true do if (v229==(0 -0)) then v80=v80 + (1 -0) ;v230=v76[v80];v229=1 + 0 ;end if (v229==((183 + 54) -(141 + 95))) then if (v230[1 + 0 ]==74) then v174[v228-1 ]={v86,v230[1 + 2 ]};else v174[v228-((2 + 0) -1) ]={v62,v230[4 -1 ]};end v85[ #v85 + (3 -2) ]=v174;break;end end end v86[v88[2 + 0 ]]=v29(v172,v173,v63);end elseif (v89<=((762 -(83 + 468)) -(92 + 71))) then v86[v88[1 + (1807 -(1202 + 604)) ]]=v86[v88[3]]/v86[v88[4]] ;elseif (v89>(81 -32)) then local v263=v88[767 -(574 + 191) ];local v264,v265=v79(v86[v263](v13(v86,v263 + (4 -3) + 0 ,v88[(11 -4) -4 ])));v81=(v265 + v263) -(1 + (0 -0)) ;local v266=0;for v277=v263,v81 do local v278=(1174 -(45 + 280)) -(246 + 8 + 595) ;while true do if ((v278==(126 -(55 + 71))) or (3693<1977)) then v266=v266 + 1 ;v86[v277]=v264[v266];break;end end end elseif (v88[2 -0 ]<=v86[v88[1794 -(573 + 1217) ]]) then v80=v80 + (2 -(1 + 0)) ;else v80=v88[1 + 2 ];end elseif ((v89<=(83 -31)) or (930>2101)) then if ((4153>3086) and (v89>(990 -(714 + 83 + 142)))) then v86[v88[5 -3 ]]=v88[3 -0 ]~=(0 + 0) ;v80=v80 + (1 -0) ;else v86[v88[(448 + 360) -(118 + 688) ]]=v62[v88[3]];end elseif (v89<=(101 -(25 + 5 + 18))) then local v180=v88[1 + 1 ];v86[v180]=v86[v180](v13(v86,v180 + (1887 -((1716 -789) + 959)) ,v81));elseif ((v89>(181 -127)) or (1383>=2131)) then do return;end elseif (v86[v88[734 -(16 + 716) ]]<=v88[(1918 -(340 + 1571)) -3 ]) then v80=v80 + (98 -(11 + 86)) ;else v80=v88[6 -3 ];end elseif ((v89<=64) or (1876>=2541)) then if (v89<=(344 -(175 + 110))) then if ((v89<=57) or (4654<=4050)) then if ((v89>(140 -84)) or (2602<1496)) then do return;end else v86[v88[9 -7 ]]=v86[v88[3]][v88[1800 -(503 + 1293) ]];end elseif ((v89>58) or (1020>2288)) then v86[v88[5 -3 ]]=v86[v88[3 + 0 ]];else v86[v88[1063 -(320 + 490 + 251) ]]=v86[v88[3 + 0 ]][v88[2 + 2 ]];end elseif ((1782<=3772) and (v89<=(55 + 6))) then if (v89==(593 -(43 + 490))) then local v188=v88[735 -(711 + 22) ];v86[v188]=v86[v188](v13(v86,v188 + ((1775 -(1733 + 39)) -(5 -3)) ,v81));else v86[v88[861 -(240 + 619) ]]();end elseif ((v89<=62) or (4700<813)) then local v190=0 + (1034 -(125 + 909)) ;local v191;while true do if ((328==328) and (3199<4050) and (v190==0)) then v191=v88[(1950 -(1096 + 852)) -0 ];v86[v191](v13(v86,v191 + 1 + 0 + 0 ,v88[1747 -(1344 + 400) ]));break;end end elseif ((1511<3808) and (v89==(468 -((363 -108) + 146 + 4)))) then if ((v88[2]==v86[v88[4 + 0 ]]) or (4951<4430)) then v80=v80 + 1 ;else v80=v88[2 + 1 ];end elseif ( not v86[v88[8 -6 ]] or (2510>4919)) then v80=v80 + ((515 -(409 + 103)) -2) ;else v80=v88[1742 -(404 + (1571 -(46 + 190))) ];end elseif (v89<=69) then if (v89<=(472 -(183 + 223))) then if (v89==(79 -14)) then if ((4763==4763) and (v86[v88[(97 -(51 + 44)) + 0 ]]==v88[4])) then v80=v80 + 1 + 0 + 0 ;else v80=v88[(1657 -(1114 + 203)) -(10 + 327) ];end else local v192=v88[2];v86[v192](v86[v192 + 1 + 0 ]);end elseif ((96==96) and (v89<=67)) then local v193=v88[340 -(118 + 220) ];v86[v193]=v86[v193]();elseif ((v89==(23 + 45)) or (2739>4008)) then local v268=v88[451 -(108 + 341) ];v86[v268]=v86[v268]();else v86[v88[2]]=v29(v77[v88[2 + 1 ]],nil,v63);end elseif (v89<=(300 -229)) then if (v89>70) then local v195=726 -(228 + 498) ;local v196;local v197;while true do if (v195==(1493 -(155 + 556 + 782))) then v196=v88[5 -(2 + 0) ];v197=v86[v196];v195=470 -(270 + 199) ;end if (v195==1) then for v296=v196 + 1 + 0 ,v88[1823 -(580 + (1902 -(174 + 489))) ] do v197=v197   .. v86[v296] ;end v86[v88[2]]=v197;break;end end else for v231=v88[5 -3 ],v88[3 + 0 ] do v86[v231]=nil;end end elseif (v89<=(3 + 69)) then local v198=0 + 0 ;local v199;while true do if (v198==(0 -0)) then v199=v88[2 + 0 ];v86[v199]=v86[v199](v86[v199 + 1 ]);break;end end elseif (v89>73) then v86[v88[1169 -((1680 -1035) + 522) ]]=v86[v88[1793 -(1010 + (2685 -(830 + 1075))) ]];else local v273=(524 -(303 + 221)) + 0 ;local v274;local v275;while true do if (((0 -0)==v273) or (23==1134)) then v274=v88[5 -3 ];v275={};v273=1837 -(1045 + 791) ;end if (v273==(2 -1)) then for v311=1270 -(231 + 1038) , #v85 do local v312=v85[v311];for v313=0 -0 , #v312 do local v314=505 -(351 + 154) ;local v315;local v316;local v317;while true do if ((1574 -(1281 + 293))==v314) then v315=v312[v313];v316=v315[267 -(24 + 4 + 238) ];v314=1;end if (1==v314) then v317=v315[4 -2 ];if (((v316==v86) and (v317>=v274)) or (2693>=4111)) then v275[v317]=v316[v317];v315[1560 -(1381 + 178) ]=v275;end break;end end end end break;end end end v80=v80 + (1163 -(171 + 991)) + 0 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!303Q0003093Q00736574667073636170026Q005E40030A3Q006C6F6164737472696E6703043Q0067616D6503073Q00482Q747047657403493Q00682Q7470733A2Q2F7261772E67697468756275736572636F6E74656E742E636F6D2F44656E44656E3Q5A2F4B61766F2D55492D4C6962726172792F6D61696E2F4B61766F2E6C756103093Q004372656174654C696203133Q00426C6164652042612Q6C206279204D6963726F03093Q004461726B5468656D6503063Q004E657754616203043Q004D61696E030A3Q004E657753656374696F6E03063Q00436F6D626174030A3Q004765745365727669636503073Q00506C617965727303133Q005669727475616C496E7075744D616E61676572030B3Q004C6F63616C506C61796572030B3Q00506C61796572412Q64656403043Q005761697403093Q00776F726B7370616365030C3Q0057616974466F724368696C6403053Q0042612Q6C73023Q00C088C3004203093Q004E6577546F2Q676C65030A3Q004175746F2050612Q7279031F3Q0050612Q72696573207468652062612Q6C206175746F6D61746963612Q6C792E030A3Q004368696C64412Q64656403073Q00436F2Q6E65637403093Q004E657742752Q746F6E030B3Q004D616E75616C205370616D03203Q005370616D2070612Q72696573207768656E65766572207475726E6564206F6E2E03053Q004578747261030B3Q0042612Q6C2056697375616C031A3Q00446973706C617973207468652062612Q6C732076697375616C2E030A3Q004E69676874204D6F6465031F3Q005475726E73207468652061746D6F73706865726520696E746F206E6967687403043Q007461736B03053Q00646566657203063Q00437261746573030F3Q004275792053776F726420437261746503153Q0042757973207468652073776F72642063726174652E03133Q00427579204578706C6F73696F6E20437261746503193Q004275797320746865206578706C6F73696F6E2063726174652E03143Q004175746F204275792053776F7264204372617465031F3Q004175746F6D61746963612Q6C7920627579732073776F72642063726174652E03183Q004175746F20427579204578706C6F73696F6E20437261746503223Q004175746F6D61746963612Q6C792062757973206578706C6F73696F6E20637261746503053Q00737061776E00713Q0012083Q00013Q001214000100024Q00423Q000200010012083Q00033Q001208000100043Q00201E000100010005001214000300064Q0009000100034Q00355Q00022Q00443Q0001000200203A00013Q0007001214000200083Q001214000300094Q000C00010003000200201E00020001000A0012140004000B4Q000C00020004000200201E00030002000C0012140005000D4Q000C0003000500022Q002D00045Q001208000500043Q00201E00050005000E0012140007000F4Q000C000500070002001208000600043Q00201E00060006000E001214000800104Q000C00060008000200203A00070005001100062000070023000100010004273Q0023000100203A00070005001200201E0007000700132Q0022000700020002001208000800143Q00201E000800080015001214000A00163Q001214000B00174Q000C0008000B000200062E00093Q000100012Q004A3Q00083Q00062E000A0001000100012Q004A3Q00073Q00062E000B0002000100012Q004A3Q00063Q00201E000C00030018001214000E00193Q001214000F001A3Q00062E00100003000100012Q004A3Q00044Q003E000C0010000100203A000C0008001B00201E000C000C001C00062E000E0004000100042Q004A3Q00044Q004A3Q000A4Q004A3Q000B4Q004A3Q00094Q003E000C000E000100201E000C0003001D001214000E001E3Q001214000F001F3Q000211001000054Q003E000C0010000100201E000C0002000C001214000E00204Q000C000C000E000200201E000D000C001D001214000F00213Q001214001000223Q000211001100064Q003E000D0011000100201E000D000C0018001214000F00233Q001214001000243Q000211001100074Q003E000D00110001001208000D00253Q00203A000D000D0026000211000E00084Q0042000D0002000100201E000D0002000C001214000F00274Q000C000D000F000200201E000E000D001D001214001000283Q001214001100293Q000211001200094Q003E000E0012000100201E000E000D001D0012140010002A3Q0012140011002B3Q0002110012000A4Q003E000E0012000100201E000E000D00180012140010002C3Q0012140011002D3Q0002110012000B4Q003E000E0012000100201E000E000D00180012140010002E3Q0012140011002F3Q0002110012000C4Q003E000E00120001001208000E00303Q000211000F000D4Q0042000E00020001001208000E00303Q000211000F000E4Q0042000E000200012Q00498Q00373Q00013Q000F3Q00083Q0003063Q00747970656F6603083Q00496E7374616E63652Q033Q0049734103083Q004261736550617274030E3Q00497344657363656E64616E744F66030C3Q00476574412Q7472696275746503083Q007265616C42612Q6C3Q01183Q001208000100014Q003B00026Q002200010002000200264100010014000100020004273Q0014000100201E00013Q0003001214000300044Q000C00010003000200060A0001001600013Q0004273Q0016000100201E00013Q00052Q003300036Q000C00010003000200060A0001001600013Q0004273Q0016000100201E00013Q0006001214000300074Q000C00010003000200261D00010015000100080004273Q001500012Q002300016Q002D000100014Q0015000100024Q00373Q00017Q00033Q0003093Q00436861726163746572030E3Q0046696E6446697273744368696C6403093Q00486967686C69676874000B4Q00337Q00203A5Q000100060A3Q000900013Q0004273Q000900012Q00337Q00203A5Q000100201E5Q0002001214000200034Q000C3Q000200022Q00153Q00024Q00373Q00017Q00033Q00028Q0003143Q0053656E644D6F75736542752Q746F6E4576656E7403043Q0067616D65001E3Q0012143Q00014Q0046000100013Q0026413Q0002000100010004273Q00020001001214000100013Q00264100010005000100010004273Q000500012Q003300025Q00201E000200020002001214000400013Q001214000500013Q001214000600014Q002D000700013Q001208000800033Q001214000900014Q003E0002000900012Q003300025Q00201E000200020002001214000400013Q001214000500013Q001214000600014Q002D00075Q001208000800033Q001214000900014Q003E0002000900010004273Q001D00010004273Q000500010004273Q001D00010004273Q000200012Q00373Q00017Q00053Q00028Q0003053Q007072696E74030B3Q004175746F2050612Q72792003073Q00456E61626C656403083Q0044697361626C656401123Q001214000100013Q00264100010001000100010004273Q000100012Q002F7Q001208000200023Q001214000300034Q003300045Q00060A0004000C00013Q0004273Q000C0001001214000400043Q0006200004000D000100010004273Q000D0001001214000400054Q00050003000300042Q00420002000200010004273Q001100010004273Q000100012Q00373Q00017Q00063Q00028Q00026Q00F03F03043Q007469636B03183Q0047657450726F70657274794368616E6765645369676E616C03083Q00506F736974696F6E03073Q00436F2Q6E656374012A3Q001214000100014Q0046000200043Q00264100010007000100010004273Q00070001001214000200014Q0046000300033Q001214000100023Q00264100010002000100020004273Q000200012Q0046000400043Q0026410002001C000100020004273Q001C0001001208000500034Q00440005000100022Q003B000400053Q00201E00053Q0004001214000700054Q000C00050007000200201E00050005000600062E00073Q000100062Q00108Q00103Q00014Q004A8Q004A3Q00034Q00103Q00024Q004A3Q00044Q003E0005000700010004273Q002900010026410002000A000100010004273Q000A00012Q0033000500034Q003B00066Q002200050002000200062000050024000100010004273Q002400012Q00373Q00013Q00203A00033Q0005001214000200023Q0004273Q000A00010004273Q002900010004273Q000200012Q00373Q00013Q00013Q000A3Q00028Q0003083Q00506F736974696F6E03093Q00776F726B7370616365030D3Q0043752Q72656E7443616D65726103053Q00466F63757303093Q004D61676E6974756465026Q00F03F026Q00244003043Q007469636B026Q11913F002F4Q00337Q00060A3Q002200013Q0004273Q002200012Q00333Q00014Q00443Q0001000200060A3Q002200013Q0004273Q002200010012143Q00014Q0046000100023Q0026413Q0019000100010004273Q001900012Q0033000300023Q00203A000300030002001208000400033Q00203A00040004000400203A00040004000500203A0004000400022Q002800030003000400203A0001000300062Q0033000300034Q0033000400023Q00203A0004000400022Q002800030003000400203A0002000300060012143Q00073Q000E3F0007000900013Q0004273Q000900012Q002900030001000200260600030022000100080004273Q002200012Q0033000300044Q00250003000100010004273Q002200010004273Q000900010012083Q00094Q00443Q000100022Q0033000100054Q00285Q0001000E21000A002E00013Q0004273Q002E00010012083Q00094Q00443Q000100022Q002F3Q00054Q00333Q00023Q00203A5Q00022Q002F3Q00034Q00373Q00017Q00023Q00030A3Q006C6F6164737472696E6703550C2Q002Q2D20496E7374616E6365733A2038207C20536372697074733A2031207C204D6F64756C65733A2030207C20546167733A20300A6C6F63616C2047324C203D207B7D3B2Q0A2Q2D20537461727465724775692E426C61646542612Q6C0A47324C5B2231225D203D20496E7374616E63652E6E657728225363722Q656E477569222C2067616D653A476574536572766963652822506C617965727322292E4C6F63616C506C617965723A57616974466F724368696C642822506C61796572477569222Q293B0A47324C5B2231225D5B224E616D65225D203D202Q5B426C61646542612Q6C2Q5D3B0A47324C5B2231225D5B225A496E6465784265686176696F72225D203D20456E756D2E5A496E6465784265686176696F722E5369626C696E673B0A47324C5B2231225D5B2252657365744F6E537061776E225D203D2066616C73653B3Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D650A47324C5B2232225D203D20496E7374616E63652E6E657728224672616D65222C2047324C5B2231225D293B0A47324C5B2232225D5B22426F7264657253697A65506978656C225D203D20303B0A47324C5B2232225D5B224261636B67726F756E64436F6C6F7233225D203D20436F6C6F72332E66726F6D5247422831382C2031382C203138293B0A47324C5B2232225D5B2253697A65225D203D205544696D322E6E657728302C2038302C20302C20312Q30293B0A47324C5B2232225D5B22506F736974696F6E225D203D205544696D322E6E657728302C2038352C20302C203837293B0A47324C5B2232225D5B22426F72646572436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228302C20302C2030293B3Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E5549436F726E65720A47324C5B2233225D203D20496E7374616E63652E6E657728225549436F726E6572222C2047324C5B2232225D293B4Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E5465787442752Q746F6E0A47324C5B2234225D203D20496E7374616E63652E6E657728225465787442752Q746F6E222C2047324C5B2232225D293B0A47324C5B2234225D5B22426F7264657253697A65506978656C225D203D20303B0A47324C5B2234225D5B225465787453697A65225D203D2032303B0A47324C5B2234225D5B2254657874436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228322Q352C20322Q352C20322Q35293B0A47324C5B2234225D5B224261636B67726F756E64436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228322Q352C2035372C203630293B0A47324C5B2234225D5B22466F6E7446616365225D203D20466F6E742E6E6577282Q5B726278612Q7365743A2Q2F666F6E74732F66616D696C6965732F467265646F6B614F6E652E6A736F6E2Q5D2C20456E756D2E466F6E745765696768742E526567756C61722C20456E756D2E466F6E745374796C652E4E6F726D616C293B0A47324C5B2234225D5B2253697A65225D203D205544696D322E6E657728302C2035302C20302C203530293B0A47324C5B2234225D5B22426F72646572436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228302C20302C2030293B0A47324C5B2234225D5B2254657874225D203D202Q5B4F2Q662Q5D3B0A47324C5B2234225D5B22506F736974696F6E225D203D205544696D322E6E657728302C2031342C20302C203337293B3Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E5465787442752Q746F6E2E5549436F726E65720A47324C5B2235225D203D20496E7374616E63652E6E657728225549436F726E6572222C2047324C5B2234225D293B0A47324C5B2235225D5B22436F726E6572526164697573225D203D205544696D2E6E657728302C203235293B3Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E5465787442752Q746F6E2E55495374726F6B650A47324C5B2236225D203D20496E7374616E63652E6E6577282255495374726F6B65222C2047324C5B2234225D293B0A47324C5B2236225D5B22546869636B6E652Q73225D203D20323B0A47324C5B2236225D5B22436F6C6F72225D203D20436F6C6F72332E66726F6D5247422831382C2031382C203138293B3Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E5465787442752Q746F6E2E4C6F63616C5363726970740A47324C5B2237225D203D20496E7374616E63652E6E657728224C6F63616C536372697074222C2047324C5B2234225D293B4Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E546578744C6162656C0A47324C5B2238225D203D20496E7374616E63652E6E65772822546578744C6162656C222C2047324C5B2232225D293B0A47324C5B2238225D5B22546578745772612Q706564225D203D20747275653B0A47324C5B2238225D5B22426F7264657253697A65506978656C225D203D20303B0A47324C5B2238225D5B22546578745363616C6564225D203D20747275653B0A47324C5B2238225D5B224261636B67726F756E64436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228322Q352C20322Q352C20322Q35293B0A47324C5B2238225D5B225465787453697A65225D203D2031343B0A47324C5B2238225D5B22466F6E7446616365225D203D20466F6E742E6E6577282Q5B726278612Q7365743A2Q2F666F6E74732F66616D696C6965732F467265646F6B614F6E652E6A736F6E2Q5D2C20456E756D2E466F6E745765696768742E526567756C61722C20456E756D2E466F6E745374796C652E4E6F726D616C293B0A47324C5B2238225D5B2254657874436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228322Q352C20322Q352C20322Q35293B0A47324C5B2238225D5B224261636B67726F756E645472616E73706172656E6379225D203D20313B0A47324C5B2238225D5B2253697A65225D203D205544696D322E6E657728302C2037392C20302C202Q33293B0A47324C5B2238225D5B22426F72646572436F6C6F7233225D203D20436F6C6F72332E66726F6D52474228302C20302C2030293B0A47324C5B2238225D5B2254657874225D203D202Q5B4D616E75616C205370616D2Q5D3B3Q0A2Q2D20537461727465724775692E426C61646542612Q6C2E4672616D652E5465787442752Q746F6E2E4C6F63616C5363726970740A6C6F63616C2066756E6374696F6E20435F3728290A6C6F63616C20736372697074203D2047324C5B2237225D3B0A096966206E6F742067616D653A49734C6F616465642829207468656E0A2Q0967616D652E4C6F616465643A5761697428290A09656E640A090A096C6F63616C2076203D2067616D653A4765745365727669636528225669727475616C496E7075744D616E6167657222290A090A096C6F63616C2062203D207363726970742E506172656E740A09622E506172656E742E416374697665203D20747275650A09622E506172656E742E4472612Q6761626C65203D20747275650A090A096C6F63616C20416374697665203D2066616C73652Q202Q2D20496E697469616C697A65204163746976652073746174650A090A09622E4D6F75736542752Q746F6E31436C69636B3A436F2Q6E6563742866756E6374696F6E28290A2Q09416374697665203D206E6F74204163746976652Q202Q2D20546F2Q676C65207468652073746174650A2Q09622E54657874203D2041637469766520616E6420224F6E22206F7220224F2Q66222Q202Q2D205570646174652062752Q746F6E20746578740A2Q09622E4261636B67726F756E64436F6C6F7233203D2041637469766520616E6420436F6C6F72332E66726F6D5247422838352C20322Q352C2031323729206F7220436F6C6F72332E66726F6D52474228322Q352C2035362C203539292Q202Q2D2055706461746520636F6C6F720A090A2Q097768696C652041637469766520646F0A3Q09763A53656E644D6F75736542752Q746F6E4576656E7428302C20302C20302C20747275652C2067616D652C2030290A3Q09763A53656E644D6F75736542752Q746F6E4576656E7428302C20302C20302C2066616C73652C2067616D652C2030290A3Q097761697428292Q202Q2D20436F6E74726F6C20746865207370616D20726174650A2Q09656E640A09656E64290A656E643B0A7461736B2E737061776E28435F37293B2Q0A72657475726E2047324C5B2231225D2C20726571756972653B00053Q0012083Q00013Q001214000100024Q00223Q000200022Q00253Q000100012Q00373Q00017Q00023Q00030A3Q006C6F6164737472696E67033F102Q006C6F63616C20436F7265477569203D2067616D653A4765745365727669636528225374617274657247756922290A6C6F63616C205265706C69636174656453746F72616765203D2067616D653A4765745365727669636528225265706C69636174656453746F7261676522290A6C6F63616C20506C6179657273203D2067616D653A476574536572766963652822506C617965727322290A6C6F63616C2052756E53657276696365203D2067616D653A47657453657276696365282252756E5365727669636522290A6C6F63616C205669727475616C496E7075744D616E61676572203D2067616D653A4765745365727669636528225669727475616C496E7075744D616E6167657222292Q0A70612Q7269656442612Q6C73203D207B7D2Q0A6C6F63616C20706C61796572203D20506C61796572732E4C6F63616C506C617965720A6C6F63616C20636861726163746572203D20706C617965722E4368617261637465720A6C6F63616C2068756D616E6F6964522Q6F7450617274203D2063686172616374657220616E64206368617261637465723A57616974466F724368696C64282248756D616E6F6964522Q6F745061727422292Q0A6C6F63616C2066756E6374696F6E2067657442612Q6C28290A4Q206C6F63616C2062612Q6C73203D20776F726B73706163652E42612Q6C733A4765744368696C6472656E28290A4Q20666F722069203D20312C202362612Q6C7320646F0A8Q206C6F63616C2062612Q6C203D2062612Q6C735B695D0A8Q206966206E6F742062612Q6C2E416E63686F726564207468656E0A9Q203Q2072657475726E2062612Q6C0A8Q20656E640A4Q20656E640A656E642Q0A6C6F63616C2066756E6374696F6E206973546172676574656428290A4Q206C6F63616C2062612Q6C73203D20776F726B73706163652E42612Q6C733A4765744368696C6472656E28290A4Q206C6F63616C207461726765746564203D2066616C7365200A4Q20666F722069203D20312C202362612Q6C7320646F0A8Q206C6F63616C2062612Q6C203D2062612Q6C735B695D0A8Q2069662062612Q6C3A476574412Q7472696275746528227461726765742229202Q3D20706C617965722E4E616D65207468656E0A9Q203Q207461726765746564203D20747275652Q202Q2D2053657420746F20747275652069662074686520706C617965722069732074617267657465640A9Q203Q20627265616B2Q200A8Q20656E640A4Q20656E640A4Q200A4Q2072657475726E2074617267657465640A656E642Q0A6C6F63616C2066756E6374696F6E2067657444697374616E6365416E6442612Q6C28290A4Q206C6F63616C2062612Q6C203D2067657442612Q6C28290A4Q2069662068756D616E6F6964522Q6F745061727420616E642062612Q6C207468656E0A8Q206C6F63616C2064697374616E6365203D202868756D616E6F6964522Q6F74506172742E506F736974696F6E202D2062612Q6C2E506F736974696F6E292E4D61676E69747564650A8Q2072657475726E2064697374616E63652C2062612Q6C0A4Q20656E640A4Q2072657475726E206D6174682E687567652C206E696C0A656E642Q0A6C6F63616C2066756E6374696F6E2067657450696E6728290A4Q2072657475726E20706C617965723A4765744E6574776F726B50696E672829202A2032300A656E642Q0A6C6F63616C2066756E6374696F6E2067657450612Q7279446973742862612Q6C290A4Q2072657475726E206D6174682E636C616D702862612Q6C2E56656C6F636974792E4D61676E6974756465202F20322E34202B2067657450696E6728292C2031352C20322Q30290A656E642Q0A6C6F63616C2066756E6374696F6E2077616974556E74696C4E6F74546172676574656428290A4Q206C6F63616C2074696D656F7574203D2066616C73650A4Q20737061776E2866756E6374696F6E28290A8Q207761697428302E38290A8Q2074696D656F7574203D2066616C73650A4Q20656E64290A4Q207265706561740A8Q2052756E536572766963652E4865617274626561743A5761697428290A4Q20756E74696C206E6F7420697354617267657465642829206F722074696D656F75740A656E642Q0A6C6F63616C20636972636C65203D20496E7374616E63652E6E657728225061727422290A636972636C652E5368617065203D20456E756D2E50617274547970652E42612Q6C0A636972636C652E4D6174657269616C203D20456E756D2E4D6174657269616C2E466F7263654669656C640A636972636C652E506172656E74203D20776F726B73706163650A636972636C652E43616E436F2Q6C696465203D2066616C73650A636972636C652E416E63686F726564203D2066616C73650A636972636C652E43617374536861646F77203D2066616C73650A636972636C652E5472616E73706172656E6379203D20302E382Q0A6C6F63616C206C617374436865636B54696D65203D205Q390A6C6F63616C20616C7265616479436865636B6564203D2066616C73650A6C6F63616C206C61737456656C6F63697479203D206E696C2Q0A6C6F63616C2066756E6374696F6E207265736574436865636B537461746528290A4Q20616C7265616479436865636B6564203D2066616C73650A4Q20636861726163746572203D20706C617965722E4368617261637465720A4Q2068756D616E6F6964522Q6F7450617274203D2063686172616374657220616E64206368617261637465723A57616974466F724368696C64282248756D616E6F6964522Q6F745061727422290A656E642Q0A706C617965722E436861726163746572412Q6465643A436F2Q6E656374287265736574436865636B5374617465290A696620636861726163746572207468656E0A4Q206368617261637465723A57616974466F724368696C64282248756D616E6F696422292E446965643A436F2Q6E656374287265736574436865636B5374617465290A656E642Q0A6C6F63616C2066756E6374696F6E20697342612Q6C43757276696E672862612Q6C290A4Q206966206E6F74206C61737456656C6F63697479207468656E0A8Q206C61737456656C6F63697479203D2062612Q6C2E56656C6F636974790A8Q2072657475726E2066616C73650A4Q20656E640A4Q206C6F63616C2076656C6F636974794368616E6765203D202862612Q6C2E56656C6F63697479202D206C61737456656C6F63697479292E4D61676E69747564650A4Q206C61737456656C6F63697479203D2062612Q6C2E56656C6F636974790A4Q206C6F63616C20697343757276696E67203D2076656C6F636974794368616E6765203E2067657467656E7628292E63757276655265737472696374696F6E0A4Q2072657475726E20697343757276696E670A656E642Q0A6C6F63616C2066756E6374696F6E20757064617465436972636C6528290A4Q2069662068756D616E6F6964522Q6F745061727420616E64206E6F742067657467656E7628292E64697361626C6556697375616C697A6572207468656E0A8Q20636972636C652E434672616D65203D2068756D616E6F6964522Q6F74506172742E434672616D650A8Q206C6F63616C2064697374616E63652C2062612Q6C203D2067657444697374616E6365416E6442612Q6C28290A8Q2069662062612Q6C207468656E0A9Q203Q20636972636C652E53697A65203D20566563746F72332E6E65772867657450612Q7279446973742862612Q6C292C2067657450612Q7279446973742862612Q6C292C2067657450612Q7279446973742862612Q6C2Q290A8Q20656E640A4Q20656E640A656E642Q0A6C6F63616C2066756E6374696F6E2068616E646C65546172676574696E6728290A4Q206C6F63616C2064697374616E63652C2062612Q6C203D2067657444697374616E6365416E6442612Q6C28290A4Q20696620697354617267657465642829207468656E0A8Q20636972636C652E436F6C6F72203D20436F6C6F72332E6E657728312C20302C2030292Q202Q2D20526564207768656E2074617267657465640A4Q20656C73650A8Q20636972636C652E436F6C6F72203D20436F6C6F72332E6E657728302C20312C2030292Q202Q2D2047722Q656E207768656E206E6F742074617267657465640A4Q20656E642Q0A4Q2069662062612Q6C20616E642062612Q6C2E56656C6F636974792E4D61676E6974756465203E203020616E642069735461726765746564282920616E642064697374616E6365203C2067657450612Q7279446973742862612Q6C29207468656E0A8Q20696620697342612Q6C43757276696E672862612Q6C29207468656E0A9Q203Q202Q2D20412Q646974696F6E616C206C6F6769632063616E20626520612Q6465642068657265206966206E2Q656465640A8Q20656E640A8Q206966206E6F742070612Q7269656442612Q6C735B62612Q6C5D207468656E200A9Q203Q205669727475616C496E7075744D616E616765723A53656E644B65794576656E7428747275652C20456E756D2E4B6579436F64652E462C2066616C73652C206E696C290A9Q203Q207761697428302E2Q3035290A9Q203Q205669727475616C496E7075744D616E616765723A53656E644B65794576656E742866616C73652C20456E756D2E4B6579436F64652E462C2066616C73652C206E696C290A9Q203Q2070612Q7269656442612Q6C735B62612Q6C5D203D2066616C73650A9Q203Q2077616974556E74696C4E6F74546172676574656428290A9Q203Q2070612Q7269656442612Q6C73203D207B7D0A8Q20656E640A4Q20656E640A656E642Q0A6C6F63616C2068656172746265617431203D2052756E536572766963652E4865617274626561743A436F2Q6E6563742866756E6374696F6E28290A4Q20757064617465436972636C6528290A4Q2068616E646C65546172676574696E6728290A656E64292Q0A6C6F63616C2068656172746265617432203D2052756E536572766963652E4865617274626561743A436F2Q6E6563742866756E6374696F6E28290A4Q20636972636C652E5472616E73706172656E6379203D2067657467656E7628292E64697361626C6556697375616C697A657220616E642031206F7220302E382Q0A656E64292Q0A7265706561740A4Q2052756E536572766963652E4865617274626561743A5761697428290A756E74696C2067657467656E7628292E64697361626C652Q0A686561727462656174313A446973636F2Q6E65637428290A686561727462656174323A446973636F2Q6E65637428290A636972636C653A44657374726F79282900053Q0012083Q00013Q001214000100024Q00223Q000200022Q00253Q000100012Q00373Q00017Q00023Q0003073Q0067657467656E7603023Q004E4D01043Q001208000100014Q0044000100010002001012000100024Q00373Q00017Q00123Q0003043Q007461736B03043Q0077616974026Q00F03F028Q0003073Q0067657467656E7603023Q004E4D03063Q0043726561746503093Q0054772Q656E496E666F2Q033Q006E6577026Q00084003093Q00436C6F636B54696D65026Q330F4003043Q00506C6179026Q002B4003043Q0067616D65030A3Q0047657453657276696365030C3Q0054772Q656E5365727669636503083Q004C69676874696E6700413Q0012083Q00013Q00203A5Q0002001214000100034Q00223Q0002000200060A3Q004000013Q0004273Q004000010012143Q00044Q0046000100033Q0026413Q0039000100030004273Q003900012Q0046000300033Q0026410001002A000100030004273Q002A0001001208000400054Q004400040001000200203A00040004000600060A0004001E00013Q0004273Q001E000100201E0004000200072Q003B000600033Q001208000700083Q00203A0007000700090012140008000A4Q00220007000200022Q000300083Q00010030010008000B000C2Q000C00040008000200201E00040004000D2Q00420004000200010004275Q000100201E0004000200072Q003B000600033Q001208000700083Q00203A0007000700090012140008000A4Q00220007000200022Q000300083Q00010030010008000B000E2Q000C00040008000200201E00040004000D2Q00420004000200010004275Q00010026410001000B000100040004273Q000B00010012080004000F3Q00201E000400040010001214000600114Q000C0004000600022Q003B000200043Q0012080004000F3Q00201E000400040010001214000600124Q000C0004000600022Q003B000300043Q001214000100033Q0004273Q000B00010004275Q00010026413Q0008000100040004273Q00080001001214000100044Q0046000200023Q0012143Q00033Q0004273Q000800010004275Q00012Q00373Q00017Q000B3Q0003043Q0067616D65030A3Q004765745365727669636503113Q005265706C69636174656453746F7261676503063Q0052656D6F7465030E3Q0052656D6F746546756E6374696F6E030C3Q00496E766F6B6553657276657203133Q0050726F6D70745075726368617365437261746503093Q00776F726B737061636503053Q00537061776E03063Q0043726174657303103Q004E6F726D616C53776F72644372617465000E3Q0012083Q00013Q00201E5Q0002001214000200034Q000C3Q0002000200203A5Q000400203A5Q000500201E5Q0006001214000200073Q001208000300083Q00203A00030003000900203A00030003000A00203A00030003000B2Q003E3Q000300012Q00373Q00017Q000B3Q0003043Q0067616D65030A3Q004765745365727669636503113Q005265706C69636174656453746F7261676503063Q0052656D6F7465030E3Q0052656D6F746546756E6374696F6E030C3Q00496E766F6B6553657276657203133Q0050726F6D70745075726368617365437261746503093Q00776F726B737061636503053Q00537061776E03063Q0043726174657303143Q004E6F726D616C4578706C6F73696F6E4372617465000E3Q0012083Q00013Q00201E5Q0002001214000200034Q000C3Q0002000200203A5Q000400203A5Q000500201E5Q0006001214000200073Q001208000300083Q00203A00030003000900203A00030003000A00203A00030003000B2Q003E3Q000300012Q00373Q00017Q00023Q0003073Q0067657467656E762Q033Q0041534301043Q001208000100014Q0044000100010002001012000100024Q00373Q00017Q00023Q0003073Q0067657467656E762Q033Q0041454301043Q001208000100014Q0044000100010002001012000100024Q00373Q00017Q00103Q00028Q0003043Q0077616974027B14AE47E17A843F03073Q0067657467656E762Q033Q0041534303043Q0067616D65030A3Q004765745365727669636503113Q005265706C69636174656453746F7261676503063Q0052656D6F7465030E3Q0052656D6F746546756E6374696F6E030C3Q00496E766F6B6553657276657203133Q0050726F6D70745075726368617365437261746503093Q00776F726B737061636503053Q00537061776E03063Q0043726174657303103Q004E6F726D616C53776F7264437261746500223Q0012143Q00014Q0046000100013Q0026413Q0002000100010004273Q00020001001214000100013Q00264100010005000100010004273Q00050001001208000200023Q001214000300034Q0042000200020001001208000200044Q004400020001000200203A00020002000500060A00023Q00013Q0004275Q0001001208000200063Q00201E000200020007001214000400084Q000C00020004000200203A00020002000900203A00020002000A00201E00020002000B0012140004000C3Q0012080005000D3Q00203A00050005000E00203A00050005000F00203A0005000500102Q003E0002000500010004275Q00010004273Q000500010004275Q00010004273Q000200010004275Q00012Q00373Q00017Q00103Q00028Q0003043Q0077616974027B14AE47E17A843F03073Q0067657467656E762Q033Q0041454303043Q0067616D65030A3Q004765745365727669636503113Q005265706C69636174656453746F7261676503063Q0052656D6F7465030E3Q0052656D6F746546756E6374696F6E030C3Q00496E766F6B6553657276657203133Q0050726F6D70745075726368617365437261746503093Q00776F726B737061636503053Q00537061776E03063Q0043726174657303143Q004E6F726D616C4578706C6F73696F6E4372617465001C3Q0012143Q00013Q0026413Q0001000100010004273Q00010001001208000100023Q001214000200034Q0042000100020001001208000100044Q004400010001000200203A00010001000500060A00013Q00013Q0004275Q0001001208000100063Q00201E000100010007001214000300084Q000C00010003000200203A00010001000900203A00010001000A00201E00010001000B0012140003000C3Q0012080004000D3Q00203A00040004000E00203A00040004000F00203A0004000400102Q003E0001000400010004275Q00010004273Q000100010004275Q00012Q00373Q00017Q00",v9(),...);
